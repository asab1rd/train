{"version":3,"sources":["reducers/appContext.js","components/calendar.jsx","components/search.jsx","components/leftContainer.jsx","components/showCities.jsx","components/infoPromo.jsx","components/addPromo.jsx","components/rightContainer.jsx","reducers/CityReducer.js","App.jsx","serviceWorker.js","index.js"],"names":["appContext","createContext","state","fetchPopular","pop","fetchFoundCities","cities","Calendar","props","context","useContext","useState","date","setdate","className","Form","disableMinute","closeOnMouseLeave","inline","name","value","onChange","event","nature","setDepartDate","slice","setReturnDate","Search","word","setword","foundCities","setfoundCities","useEffect","changeSearchedWord","onInputChange","e","target","console","log","fetchCities","axios","get","then","res","data","catch","err","id","Field","Input","focus","icon","iconPosition","placeholder","onClick","changeClicked","departInput","selected","arrivedInput","type","departDate","returnDate","Button","href","positive","leftContainer","ShowCities","showPopular","setshowPopular","searchedWord","handleClick","setDepartInput","setArrivedInput","List","Group","basic","vertical","popularCities","map","item","i","key","local_name","Item","Icon","Content","Header","as","infoPromo","infos","title","desc","button","AddPromo","setselected","passengers","setcountPassengers","passengerSelect","action","color","content","RightContainer","initialState","componentShow","setcomponentShow","componentTitle","setcomponentTitle","arrowbtn","setarrowbtn","clickedInput","CityReducer","payload","Boolean","window","location","hostname","match","ReactDOM","render","useReducer","cityReducer","dispatch","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46059e3c.chunk.js","sourcesContent":[" import {createContext} from 'react'\n \n const appContext = createContext({\n    state: {},\n    fetchPopular: pop => {},\n    fetchFoundCities: cities => {},\n  })\n\n  \nexport default appContext","import React, {useState, useContext} from 'react'\nimport { DatesRangeInput } from 'semantic-ui-calendar-react'\nimport {Form} from 'semantic-ui-react'\nimport appContext from '../reducers/appContext'\n\n\nfunction Calendar(props) {\n    const context = useContext(appContext)\n    const [date, setdate] = useState('')\n\n    const handleDateChange = (event, {value}) => {\n        setdate(value)\n        switch (props.nature) {\n          case \"departDate\":\n            context.setDepartDate(value.slice(0,10))\n            break;\n          case \"returnDate\":\n            context.setReturnDate(value.slice(13, 23))\n            break;\n          \n          default:\n            break;\n        }\n      }\n     \n    return (\n      <div className=\"calendar\">\n          <Form>\n          <DatesRangeInput\n            disableMinute\n            closeOnMouseLeave\n            inline\n            name='date'\n            value={date}\n            onChange={handleDateChange}\n          />\n        </Form>\n      </div>\n    )\n}\n\nexport default Calendar\n","import React, {useContext,useState,useEffect} from 'react'\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport {DateInput} from 'semantic-ui-calendar-react'\nimport '../assets/search.scss'\nimport axios from 'axios'\nimport appContext from '../reducers/appContext'\nimport Calendar from './calendar'\n\n\nexport default function Search() {\n    \n    const context = useContext(appContext)\n    const [word, setword] = useState(\"\")\n    const [foundCities, setfoundCities] = useState([])\n    \n    // eslint-disable-next-line\n    useEffect(() => {\n\n        context.changeSearchedWord(word)\n        context.fetchFoundCities(foundCities)\n        \n        \n    }, [foundCities, word])\n    \n    const onInputChange = (e) => {\n        if (e.target.value) {\n            setword(e.target.value)\n            console.log(word)\n            fetchCities()\n        } else {\n            setword(\"\")\n            // context.changeSearchedWord(word)\n            // context.fetchFoundCities([])\n            setfoundCities([])\n        }\n    }\n\n\n    const fetchCities =()=>{\n            axios\n            .get(`https://api.tictactrip.eu/cities/autocomplete/?q=${word}`)\n            .then(res => {\n                setfoundCities(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            }) \n            console.log(context.state)\n    }\n\n\n    const vpop = () => console.log(context.state)\n\n    return (\n        <Form>\n            <div className=\"search-section city\" id=\"oki\">\n            <Form.Field>          \n                <Input \n                    focus \n                    icon=\"train\" \n                    iconPosition=\"left\" \n                    className=\"s-depart search-input\" \n                    placeholder=\"Saisissez votre gare de départ...\" \n                    onChange={onInputChange} \n                    onClick={()=>context.changeClicked('cityDepart')}\n                    value={context.state.departInput ? context.state.departInput : \"\"} \n                />\n                <Input\n                    selected\n                    icon=\"train\" \n                    iconPosition=\"left\" \n                    className=\"s-arrivee search-input\" \n                    placeholder=\"Saisissez votre gare d'arrivée...\" \n                    onChange={onInputChange} \n                    onClick={()=>context.changeClicked('cityArrived')}\n                    value={context.state.arrivedInput ? context.state.arrivedInput : \"\"} \n\n                />\n            </Form.Field>\n            </div>\n\n            <div className=\"search-section date\">\n            <Form.Field>\n                <Input  \n                    icon=\"calendar\" \n                    iconPosition=\"left\" \n                    className=\"d-depart date-input\" \n                    placeholder=\"Aller\" type=\"button\" \n                    onClick={()=>context.changeClicked('dateDepart')}\n                    value={context.state.departDate ? context.state.departDate : \"\"} \n\n                />\n                <Input\n                    icon=\"calendar\" \n                    iconPosition=\"left\" \n                    className=\"d-arrivee date-input\" \n                    placeholder=\"Retour\" type=\"button\" \n                    onClick={()=>context.changeClicked('dateRetour')}\n                    value={context.state.returnDate ? context.state.returnDate : \"\"} \n\n                />\n            </Form.Field>\n            </div>\n\n            <div className=\"search-section promotion\">\n            <Form.Field>\n                <Input \n                    icon=\"user outline\" \n                    iconPosition=\"left\" \n                    className=\"promotion\" \n                    placeholder=\"Aller\" \n                    type=\"button\" \n                    onClick={()=>context.changeClicked('promotion')}\n                />\n                <Button onClick={()=>context.changeClicked('promotion')}>+</Button>\n            </Form.Field>\n            </div>\n\n            <div className=\"submit\">\n                <a href=\"#calendar\" className=\"add-reuct\">Utiliser un code de réduction</a>\n                <Button positive type='submit' onClick={vpop} className=\"btn-submit\">RECHERCHER</Button>\n            </div>\n\n        </Form>\n        \n    )\n}\n","import React from 'react'\nimport Search from './search'\nimport '../assets/left.scss'\n\nexport default function leftContainer() {\n    return (\n        <div className=\"left-container\">\n            <div className=\"left-title\">\n                <h3>Quel est votre trajet ?</h3>\n            </div>       \n\n            <Search></Search>\n        </div>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport {List, Button, Icon} from 'semantic-ui-react'\r\nimport appContext from '../reducers/appContext'\r\nexport  default function ShowCities (props){\r\n\r\n    const context = useContext(appContext)\r\n    const [showPopular, setshowPopular] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        setshowPopular(context.state.searchedWord === \"\" ? true:false)\r\n    }, [context.state.searchedWord])\r\n    \r\n    const handleClick = (name) =>{\r\n        console.log(name)\r\n        props.nature === \"cityDepart\" ? \r\n            context.setDepartInput(name):context.setArrivedInput(name)\r\n    }\r\n\r\n    return (\r\n            <div className=\"city-container\">\r\n                    <List className=\"city-choice\">\r\n                        <Button.Group basic vertical>\r\n                            {   \r\n                                showPopular ?\r\n                                    context.state && context.state.popularCities.map((item,i) => {\r\n                                        return <Button key={i}  onClick={()=>handleClick(item.local_name)}>\r\n                                                <List.Item >\r\n                                                    <List.Icon name='map marker alternate' />\r\n                                                    <List.Content>\r\n                                                        <List.Header as='a'>{item.local_name}</List.Header>       \r\n                                                    </List.Content>\r\n                                            </List.Item>\r\n                                            </Button> \r\n                                    }) : context.state && context.state.foundCities.slice(0,7).map((item,i) => {\r\n                                        return <Button key={i} onClick={()=>handleClick(item.local_name)}>\r\n                                                <List.Item >\r\n                                                    <List.Icon name='map marker alternate' />\r\n                                                    <List.Content>\r\n                                                        <List.Header as='a'>{item.local_name}</List.Header>\r\n                                                        \r\n                                                    </List.Content>\r\n                                            </List.Item>\r\n                                            </Button> \r\n                                    }) \r\n                            }\r\n                        </Button.Group>                        \r\n                    </List>\r\n                <Button className=\"btn-via\">\r\n                    <Icon name='map marker' />\r\n                    VIA\r\n                </Button>\r\n            </div>\r\n    )\r\n    \r\n}\r\n\r\n","import React from 'react'\nimport {Icon} from 'semantic-ui-react'\nfunction infoPromo(props) {\n    return (\n        <div className=\"promo-info-container\">\n            {\n            props.infos.map((item,i)=>(\n                <div className={`promo-info-${i}`} key={i}>\n                        <h3>{item.title}</h3>\n                        <p>{item.desc}</p>\n                        <a href=\"https://instagram.com/artkodes\"> <Icon name={item.button.icon} />\n                            {item.button.title}\n                        </a>\n                    </div>\n                ))\n            }\n\n         </div>\n    )\n}\n\nexport default infoPromo\n","import React, {useState} from 'react'\nimport {Input, Button,Icon} from 'semantic-ui-react'\nimport InfoPromos from './infoPromo'\nfunction AddPromo() {\n    const infos = [\n        {title:'Retrouver vos passagers sauvegardés ?', \n         desc:\"Connectez-vous à votre compte pour accéder aux passagers enregistrés lors de vos précédentes recherches.\", \n         button: {\n            title: 'SE CONNECTER',\n            icon : 'log out'\n            }\n        },\n        {title:'Économisez grâce aux cartes de réduction', \n         desc:\"Bénéficiez de réductions sur vos voyages en train tout au long de l'année.\",\n         button: {\n            title: 'ACHETER UNE CARTE DE RÉDUCTION',\n            icon : 'address card outline'\n            }\n        }\n        \n    ]\n\n\n    const [selected, setselected] = useState('adult')\n    const [passengers, setcountPassengers] = useState([\"adult\"])\n    const handleChange = e =>{\n        setselected(e.target.value)\n    }\n\n    \n\n    const addPromoClick = () => {\n        passengers[0] = selected\n        setcountPassengers(...passengers, passengers)\n    }\n    \n   \n\n    const passengerSelect = \n            <div className=\"profil-select\">\n                <span className=\"list\">\n                    <select name=\"select-items\" id=\"solved\" onChange={handleChange}>\n                        <option value=\"adult\">Adulte (26-59)</option>\n                        <option value=\"youth\">Jeune (0-25)</option>\n                        <option value=\"senior\">Senior (60)</option>\n                    </select>\n                </span>\n                <div className=\"promo\">\n                    {selected === \"youth\" ?  \n                        <Input action='OK' type='number' placeholder='age' />\n                        : <Button basic color='orange' content='Cartes et Abonnements'  />\n                }\n                </div>\n                \n            </div>\n\n    return (\n        <div className=\"promo-add-passenger\">\n            {passengerSelect}\n            \n            <div className=\"add-promo\">\n                    <Button icon onClick={addPromoClick} className=\"btn-add-promo\">\n                        <Icon name='user' />\n                        <span>AJOUTER UN PASSAGER </span>\n                        \n                    </Button>\n            </div>\n            <InfoPromos infos={infos}/>\n        </div>\n    )\n}\n\nexport default AddPromo\n","import React, {useContext, useEffect, useState} from 'react'\nimport '../assets/right.scss'\nimport ShowCities from './showCities'\nimport appContext from '../reducers/appContext'\nimport Calendar from './calendar'\nimport AddPromo from './addPromo'\nexport default function RightContainer() {\n\n     const context = useContext(appContext)\n     const initialState = <div className=\"none\"></div>\n     const [componentShow, setcomponentShow] = useState(initialState)\n     const [componentTitle, setcomponentTitle] = useState(\"WELCOME\")\n     const [arrowbtn, setarrowbtn] = useState('')\n\n    useEffect(() => {\n\n        if (context.state.clickedInput === \"cityDepart\"){\n            setcomponentShow(<ShowCities nature=\"cityDepart\"/>)\n            setcomponentTitle(\"Choisissez une gare de départ\")\n            setarrowbtn('city-depart')\n        }\n        else if (context.state.clickedInput === \"cityArrived\"){\n            setcomponentShow(<ShowCities nature=\"cityArrived\"/>)\n            setcomponentTitle(\"Choisissez une gare d'arrivée\")\n            setarrowbtn('city-arrived')\n        }\n        else if (context.state.clickedInput === \"dateDepart\"){\n            setcomponentShow(<Calendar nature=\"departDate\"/>)\n            setcomponentTitle(\"Choisissez la date du départ\")\n            setarrowbtn('date-depart')\n\n        }\n        else if (context.state.clickedInput === \"dateRetour\"){\n            setcomponentShow(<Calendar nature=\"returnDate\"/>)\n            setcomponentTitle(\"Choisissez la date du retour\")\n            setarrowbtn('date-retour')\n        }\n        else if (context.state.clickedInput === \"promotion\"){\n            setcomponentShow(<AddPromo/>)\n            setcomponentTitle(\"Choisissez vos passagers\")\n            setarrowbtn('btn-promo')\n\n        }\n        \n    }, [context.state.clickedInput])\n    return (\n        <div className=\"right-container\">\n            <div className={`right-pannel-arrow ${arrowbtn}`}>\n                \n            </div>\n            <div className=\"right-title\">\n                <h3>{componentTitle}</h3>\n                \n            </div>\n\n            {componentShow}\n            \n        </div>\n    )\n}\n","const CityReducer = (state, action) => {\r\n    switch (action.type){\r\n        case 'FETCH_POPULAR' : \r\n            return {\r\n                ...state,\r\n                popularCities : action.payload\r\n            }\r\n        case 'FETCH_INPUT' : \r\n            return {\r\n                ...state,\r\n                foundCities : action.payload\r\n            }\r\n        case 'CLICKED_INPUT' : \r\n            return {\r\n                ...state,\r\n                clickedInput : action.payload\r\n            }\r\n        case 'SEARCHED_WORD' : \r\n            return {\r\n                ...state,\r\n                searchedWord: action.payload\r\n            }\r\n        case 'DEPART_INPUT': {\r\n            return {\r\n                ...state,\r\n                departInput: action.payload\r\n            }\r\n        }\r\n        case 'ARRIVED_INPUT': {\r\n            return {\r\n                ...state,\r\n                arrivedInput: action.payload\r\n            }\r\n        }\r\n        case 'DEPART_DATE': {\r\n            return {\r\n                ...state,\r\n                departDate: action.payload\r\n            }\r\n        }\r\n        case 'RETURN_DATE': {\r\n            return {\r\n                ...state,\r\n                returnDate: action.payload\r\n            }\r\n        }\r\n        default : return state\r\n\r\n    }\r\n}\r\n\r\nexport default CityReducer","import React, {useReducer, useEffect} from 'react'\n import Left from './components/leftContainer'\n import Right from './components/rightContainer'\nimport './assets/App.scss'\nimport cityReducer from './reducers/CityReducer'\nimport appContext from './reducers/appContext'\nimport axios from 'axios'\nimport \"./assets/left.scss\"\nimport \"./assets/right.scss\"\nimport \"./assets/search.scss\"\n\nconst initialState = {\n  foundCities : [],\n  popularCities: [],\n  clickedInput:'',\n  searchedWord: '',\n  departInput: '',\n  arrivedInput:'',\n  departDate:'',\n  returnDate:'',\n}\n\nexport default function App() {\n  const [state, dispatch] = useReducer(cityReducer,initialState)\n\n  \n  useEffect(() => {\n    axios\n      .get('https://api.comparatrip.eu/cities/popular/7')\n      .then(res => {\n      fetchPopular(res.data)\n      })\n      .catch(err => {\n      console.log(err)\n      })\n    \n  }, [])\n\n  const fetchPopular = pop => {\n    dispatch({type: 'FETCH_POPULAR', payload : pop})\n\n  }\n\n  const fetchFoundCities = cities => {\n    dispatch({type: 'FETCH_INPUT', payload : cities})\n  }\n\n\n  const changeClicked = name => {\n    dispatch({type: 'CLICKED_INPUT', payload: name})\n\n  }\n  const changeSearchedWord = word => {\n    dispatch({type: 'SEARCHED_WORD', payload: word})\n  }\n\n  const setDepartInput = word => {\n    console.log(word)\n    dispatch({type: 'DEPART_INPUT', payload: word})\n  }\n\n  const setArrivedInput = word => {\n    console.log(word)\n    dispatch({type: 'ARRIVED_INPUT', payload: word})\n  }\n\n  const setDepartDate = date => {\n    console.log(date)\n    dispatch({type: 'DEPART_DATE', payload: date})\n  }\n\n  const setReturnDate = date => {\n    console.log(date)\n    dispatch({type: 'RETURN_DATE', payload: date})\n  }\n  \n\n   \n  return (\n    <div className=\"App\">\n      <appContext.Provider\n        value={{\n            state,\n            fetchFoundCities,\n            fetchPopular, \n            changeClicked,\n            changeSearchedWord,\n            setArrivedInput,\n            setDepartInput,\n            setDepartDate,\n            setReturnDate\n          }}\n      >\n        <Left/>\n        <Right/>\n      </appContext.Provider>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n        <App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}